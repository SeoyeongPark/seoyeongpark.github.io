[{"categories":null,"contents":"Project design The objective of this project is to help students design and simulate their course schedules based on given the dataset of the course listing.\nThe course scheduler is considered as a constraint satisfaction problem by checking schedule conflicts and requirements to generate a feasible schedule with minimizing unsatisfied preference. We have assumed that every student must enroll as a full-time student, and they have a maximum credit limit. Each course contains information about time, prerequisites, instructor, and more. Each student has a profile of courses they took, degree requirements, level of degree, and more.\nData collection We used CSC graduate and undergraduate course schedules for Fall 2022 taken from the ‘Class Search’ page provided by the university. The list of courses displays the course code, title, prerequisites or corequisites, available slots, day and time, section number of each section, instructor, and some other minor information.\nProblem formulating We formulated our problem in 4 main factors: Variable, Domains, Goal and Constraints.\nVariables: All possible courses based on a student profile\nDomains: “Taken” or “Not taken”\nInitially, we checked some ways to set domains as courses and variables as “Day” or “Time”. But it is too complicated to assign values in this case. If the variables are regarded as “Day”, there are many cases to assign two or more values in one variable(e.g. Take two or more courses in the same day). Also, if the variables are “Time”, It is hard to handle it as “Time” is a continuous variable. Thus, we select the variables as a course and set the strategy to reduce the variables if the domain of a specific variable is “Not taken”.\nGoal: In the courses’ combinations which are satisfying all hard constraints, finding optimal solutions which can satisfy as many soft constraints as possible.\nConstraints: The constraints are divided into two parts: Hard constraint and Soft constraint. A hard constraint is the one that must be satisfied at all times. Soft constraints are good to satisfy as many as possible for optimal solutions. As our problem is in a real-world environment, there would be more constraints. However, we consider the constraints which can be derived from our dataset. It could be reasonable because we can considerably reduce the possible class schedule options following below constraints.\nHard constraints The optimal solution must meet the following constraints.\nCourse availability Course cannot be enrolled if it is full. Previous taken courses Students cannot take courses which they took in the previous semester. Degree/Track/Affiliation of students Students must register courses that fit their enrolled degree program. For example, master’s students cannot enroll in undergraduate low level classes, there are limitations to take courses provided from other departments. Upper level students cannot take lower level courses, and vice versa. Time conflicts It should prevent registering more than one course happening simultaneously Credit limitation Based on the minimum / maximum credits designated by CSC department, the summation of credits of courses taken by students should be in between minimum and maximum credits. Laboratory attendance Students must take one of the laboratory courses if the courses require it. Taking same courses It is not possible to take two or more courses which are in the same course code. Courses 216 and 217 are the only exception that the lecture and laboratory sessions are separated. We assumed that 217 is the part of 216 and changed course number from 217 to 216 because students must take both courses to meet the course requirements.\nSoft constraints Soft constraints are not mandatory to meet, therefore, we calculated weight for each soft constraint. However, solutions generated after applying hard constraints are too many, so we decided to give a huge penalty if it does not meet soft constraints.\nEach degree level has minimum and maximum course numbers (assumption). Students with high-level standing cannot take lower level courses. Freshman/Sophomore: 100~300 Junior: 200~500 Senior: 300~500 Masters/Doctorate: 500~900 Course preference (count_matching) Students may have a list of courses that they want to take or not. The intersection between a given list and the generated solution contains at least 1 common course, we added the number of common courses to the weight. Each course preference is range -1(don’t want to take) to n(the number of courses that they want to take) Since the suggested output is large enough, we hugely deducted weight to reduce the number of optimal solutions if preference is a negative value. Otherwise, we added a given preference level of each course to the weight. Students must enroll at least the minimum credit hours, however, they can enroll more courses as long as it does not exceed maximum credit hours. The number of courses in the suggested solutions can vary depending on its weight. Students can enroll at most 3 credits for research courses. This is not mandatory. A student may want to enroll courses happening only on a particular day(s) (day_weight). This simple preference can be violated, courses scheduled on Friday can be enrolled depending on the situation. Preferences of each day(Monday to Friday) are given in the student’s profile as either 0 or 1 (e.g. M_0, T_1, W_1, TH_1, F_0). 1 means that a student is willing to take a course on a particular day, 0 means that a student does not prefer to have a class on a particular day. Since the suggested output is large enough, we hugely deducted weight to reduce the number of optimal solutions if a given value is a negative value. Weight calculation Weight functions are divided into two parts, which are ‘count_matching’ and ‘day_weight’. We think enrolling courses that students want should be more weighted than their day preferences. Therefore, the final weight is calculated with the following formula:\nfinal_weight = 0.6*count_matching + 0.4*day_weight\nApproach Workflow overview Data preprocessing Generating list of possible courses based on student profile and unary hard constraints Searching solutions which satisfy all other binary/high-order hard constraints Finding optimal solution which satisfy maximum number of satisfied soft constraints Generating list of possible courses For generating possible courses to each student, we formulate a student profile. Student profile contains information such as degree, min/max credit, previous taken courses, courses which they prefer to take. With this profile and unary hard constraints (Course availability, Previous taken courses, Degree of students), we filtered possible courses which can fit a specific student. For example, If a degree of student is “undergraduate” and previous taken courses of the student is “111, 113, 216, 217”, the output is a list of courses without “Courses with no seat” and “Graduate level courses” and “course code 111, 113, 216, 217”.\nSearching solutions satisfying other hard constraints The basic algorithm is similar to the backtracking algorithm. For improving the efficiency of Backtracking search, we use Forwardchecking. In the dataset, there are courses requiring participation in the laboratory(almost in undergraduate courses). For this, in the Backtracking search, we divided the cases in two parts: the course with lecture and laboratory or the course with only lecture. In the former case, one of the laboratory courses is also added in “assignment” and Forwardchecking is executed given that “assignment”.\nIn the procedure, there are two points to be explained. First of all, in Forwardchecking, we concentrated on reducing variables not values. As we know, Forwardchecking is a methodology which uses constraints to reduce the options of values per each variable. In problem formulation, we set the domain as “Taken” or “Not taken”. If the variable of value is “Not taken” given a specific “assignment”, we no longer need to consider this variable until the result is “failure”. Thus, we just remove the variable in that “assignment”. Second, if a specific variable is searched, the variable is no longer considered in the same depth search. This is related to the characteristics that backtracking search is DFS. For example, let’s assume that possible courses given a specific assignment are [A, B, C]. If lecture “A” is searched, the algorithm will find all possible course lists satisfying hard constraints. Then at the time when lecture “B” is searched, there would be redundancy if lecture “A” is also contained in the possible courses as we already searched when lecture “A” is taken. By applying this strategy, we reduced the time taken to find all possible cases satisfying hard constraints.\nFinding optimal solution which satisfy maximum number of satisfied soft constraints Out of solutions that are generated after checking hard constraints and weighting soft constraints, we filtered top 5 solutions out of entire outputs ordered by weights in descent.\nResults Student profile Output ↑ Student1’s profile ↑ 14 solutions of student1’s profile. Highlighted solutions are with top 5 weights. PDF files are generated for those solutions. Visualized solution - example Limitations and conclusion Constraint satisfaction problem and its algorithms are applied in many real-world applications. We used a forward checking algorithm and backtracking to filter out hard constraints, however, its efficiency is relatively low when the maximum credit is getting larger. While working on this project, we got the course information and availability from the school website. However, due to our algorithm, our scraped data does not reflect real-time status. Courses listed in our solution may be already closed in reality. The last updated version is as of April 14, 2022. Also, some assumptions(No consideration of requisites and location of courses) we initially made are needed to be handled. For example, we initially tried to take care of the course\u0026rsquo;s prerequisites and corequisites. However, we decided to ignore these constraints because some prerequisites are not limited to computer science courses and the list of the courses taken in the student’s profile does not contain all courses offered outside computer science while some courses can actually require students to meet this requirements. In our future work, we take these assumptions into constraints to make a more optimal and practical course schedule.\nReference [1] Jwodder. “Jwodder/Schedule: Weekly Schedule Typesetter.” GitHub, github.com/jwodder/schedule.\nSource code https://github.com/spark1217/AI_finalproject\n","permalink":"http://localhost:1313/projects/courseschedulingcsp/","tags":["AI","Constraint satisfaction problem","Course scheduling","Python","Course Project"],"title":"Course scheduling with CSP"},{"categories":null,"contents":"Project design StockImpulse is a fast and easy to use discord bot for getting stock information. This means that users will have access to information about US stocks from their discord account. StockImpulse also allows users to look up information about crypto currencies. StockImpulse allows for up to 60 stock requests every minute and 50 requests every 10 minutes for cryptocurrency.\nInstruction Refer to the official instruction\nAPIs The Finnhub API is used for information regarding stocks alongside the finnhub-python python package. The Binance API is used for information regarding crypto currency. Source code https://github.com/spark1217/StockImpulse\n","permalink":"http://localhost:1313/projects/stockimpulse/","tags":["SWE","Python","Course Project"],"title":"Discord bot - StockImpulse"},{"categories":null,"contents":"Project design Slash is a website that scrapes the most popular e-commerce websites to get the best deals on the searched items across these websites.\nFast: With slash, you can save over 50% of your time by comparing deals across websites within seconds Easy: Slash uses very easy commands to filter, sort and search your items Powerful: Quickly alter the commands to get desired results Informative: Provides the information about items through an email with attached csv file Instruction Refer to the official instruction\nUsecases Students: Students coming to university are generally on a budget and time constraint and generally spend hours wasting time to search for products on Websites. Slash is the perfect tool for these students that slashes all the unnecessary details on a website and helps them get prices for a product across multiple websites.Make the most of this tool in the upcoming Black Friday Sale. Data Analysts: Finding data for any project is one of the most tedious job for a data analyst, and the datasets found might not be the most recent one. Using slash, they can create their own dataset in real time and format it as per their needs so that they can focus on what is actually inportant. Customers: Can be used by customers to simply query for the items and get a email on the details. Source code https://github.com/spark1217/slash-group32\n","permalink":"http://localhost:1313/projects/slash/","tags":["SWE","Python","Course Project"],"title":"Slash - Price comparison web"},{"categories":null,"contents":" Summary and goal Emotion modeling of event-based mental states changing using topic modeling Understanding word attribution and vocabulary usages for emotional shifts Discovering discernible changes in writing style depending on emotional shifts in online communication and social media posts Envisioning a conditional random field (CRF) that captures transitions in emotional states to create an empathetic language suggestion model that generates comforting and supportive responses to users Analysis of the Correlation Between Emotional Fluctuation and Usage of Words In today\u0026rsquo;s digital age, online communities like Reddit play a significant role in providing emotional support and a sense of belonging to individuals dealing with various life situations and struggles. Users often express their feelings, emotions, and experiences on different subreddit communities and are provided with empathetic responses. Harnessing the valuable data generated within these communities is crucial in gaining insight into human emotion.\nOur study centrally focuses on exploring the relationship between an individual\u0026rsquo;s emotional state and writing style on social media platforms, specifically on a conversational platform like Reddit. Writing style is not just limited to one\u0026rsquo;s choice of words but also includes tone, voice, length of sentences, sentence structure, complexity, and other stylistic elements. However, we mainly focus on vocabulary usage to simplify our experiments in this study. We aim to discover whether emotional state shifts manifest as discernible changes in the usage of vocabulary and content of their online posts.\nThis paper adopts the term \u0026ldquo;user\u0026rdquo; to signify a Reddit participant, and our comprehensive proposal encompasses the following key facets:\nEmotional state prediction: By analyzing a user\u0026rsquo;s posts, our objective is to predict their corresponding emotional state, contributing to a nuanced understanding of the emotional landscape within the online community. Vocabulary-emotion relationship: We aspire to establish a robust connection between a user\u0026rsquo;s choice of vocabulary and the classification of their emotional state, unraveling the nuanced ways in which language reflects and shapes emotional experiences. External event impact: Investigating the impact of external events, ranging from elections and sports events to the pervasive influence of global phenomena like COVID-19, allows us to uncover how these occurrences influence fluctuations in users\u0026rsquo; emotional states. Probabilistic emotional transitions of users: Our research aims to unearth the cyclical patterns and transitions in users\u0026rsquo; emotional states, providing insights into the temporal dynamics of emotional experiences within the digital realm. We aim to leverage this research in developing an empathetic AI suggestion model for platforms like Reddit. This model aims to offer supportive responses to users facing diverse challenges, including mental health issues, financial struggles, career, and relationship challenges, fostering a more empathetic and supportive online environment. The overarching objective is to enhance the emotional well-being of users and improve existing empathy systems.\nHypothesis H1: Connection between word usage and emotional shifts\nH2: Impact of external context on emotional shifts\nMain findings Temporal Predominant Topics Analysis\nMacro-scope temporal analysis like one-year-long or 2-year-long reveals more general and broader topics that may be associated with societal issues. On the other hand, topics from a narrower timeframe are more personal and subjective themes that are related to personal life. Societal issues or events may be deeply connected with the emotional peak of the crowd. Further investigation of events happening in the world is required. Vocabulary-Emotion Relationship\nSimilar emotions tend to link together, such as annoyance-anger and disappoint-disapproval. Similar emotions also tend to group together, for instance, optimism-love-approval or caring-desire-gratitude. Probabilistic Emotional Transitions of Users\nReddit users with emotions such as fear, excitement, desire tend to remain in the same emotion. There is a general trend of emotional transitions from negative to positive emotions, such as sadness to admiration, love, gratitude, annoyance to admiration, disappointment to love. Source code https://github.com/saxenamansi/EmotionAnalysis_RedditUsers\n","permalink":"http://localhost:1313/research/emotion/","tags":["NLP","Emotion","Mental states","Statistical modeling","Empathic AI"],"title":"Detecting Correlation Between Emotional Transition and Vocabulary Usage in Individual Social Media Posts Using NLP"},{"categories":null,"contents":" Abstract Understanding customers and segmenting in an appropriate way play a vital role in business operations and effective marketing strategies. It helps target specific customer groups for increased engagement and profit. However, traditional approaches often struggle to predict future purchase patterns, especially when user data is sparse and fragmented across multiple sources. This research proposes a novel clustering-based multitask classification method to address these limitations. We integrated the Recency, Frequency Monetary (RFM) model to cluster customers based on their purchase patterns from various purchase categories (tickets, merchandise, fan club membership) to create a more comprehensive understanding of loyalty for a professional basketball team in Japan. The proposed model predicts a customer\u0026rsquo;s segment across all purchase categories, implying the potential relationships between each category. Initial results demonstrate that the model effectively analyzes purchase behaviors, offering actionable insights to enhance marketing strategies.\nThis research was conducted during the summer research internship at Nagoya University, Japan, in 2024.\nResources Code ","permalink":"http://localhost:1313/research/nagoya/","tags":["Behavior","Machine learning","Data science"],"title":"Clustering-based Multitask Classification for Predictive Consumer Behavior Modeling"},{"categories":null,"contents":" Summary and goal TBC Abstract How do people choose actions? Understanding the complexity of the human mind has been a persistent challenge in recent studies. How people choose actions is a complex and multifaceted task in the field of human behavior modeling. This challenge arises from the inherent complexity and diversity of human cognition, which is influenced by a lot of factors, including individual differences, environmental contexts, and the dynamic interplay between conscious and unconscious processes.\nThe way individuals make decisions about daily actions to achieve a goal can vary significantly based on different situations or personal preferences. Everyone has a different mentality or mindset, albeit to varying degrees. Simply modeling tracked behaviors of humans has limitations in fully reasoning about actions and understanding why a person has a particular behavior pattern, especially when abnormal patterns are detected.\nThus, exploring the mechanisms underlying human decision-making in everyday situations is crucial for advancing our understanding of human behavior and cognition. It is evident that individuals with similar cognitive abilities can exhibit diverse action choices, while those performing identical actions may possess distinct cognitive processes. This observation highlights that the decision-making process is not a simple, but rather a complex and context-dependent phenomenon.\nResearch questions How do different cognitive states and decisions lead to various forms of behavior and effectively improve persuasiveness? How can we build computational models that effectively capture both observable and hidden aspects of decision-making to better predict and influence future actions? Contribution In this study, we want to explore the following scenarios through voluntary work settings.\nThe emergence of identical actions from distinct cognitive processes The different action choices despite similar underlying cognitive processes This study brings contributions to the field by integrating cognitive mechanisms into computational modeling. We aim to provide a more contextual understanding of behaviors not only to enhance the predictive power of behavior models but also to develop strategic interventions that are more aligned with individual cognitive states.\nPublications Paper ","permalink":"http://localhost:1313/research/adaptive/","tags":["Reinforcement learning","Behavior","Cognitive architecture","Intervention","Multiagent","Persuasion","Theory of mind"],"title":"Influencing behavior change: adaptive interventions using cognitive mechanism"},{"categories":null,"contents":" Summary and goal Developing an RL-based user modeling framework for food agencies to optimizae food allocation for end-users by capturing, shaping user needs and preferences, and nudging shifting tastes via persuasive strategies. Approaching as a value-awareness multistakeholder recommendation system balancing benefits of both users and community prosociality. Q-learning based simulation model that learns dynamic preference changes and food availability over time and reproduces close to reality. Abstract The global issue of food insecurity affects millions worldwide, posing challenges in ensuring access to nutritious food. Despite efforts to address this, food waste and loss still impact food security. The food bank system plays a vital role in distributing available resources to those in need, directly impacting food security. However, diverse preferences among recipients pose a challenge under limited resources. Recent technological advancements offer opportunities to tackle food insecurity, often through personalized solutions. While the primary goal is to alleviate food insecurity, recipient satisfaction is crucial. Access to nutritious food is vital for physical and mental well-being, necessitating a balanced and personalized food distribution system. This paper aims to bridge the gap between personalization and prosociality in the AI field by proposing an optimization model that considers both stakeholders—providers and individuals. Using reinforcement learning, our model adapts to changing preferences and food availability over time, ensuring a fairer and more sustainable distribution. Results demonstrate superior performance compared to models focusing solely on users or the community, presenting promising implications for addressing food insecurity and resource allocation issues. Major contributions include a novel multistakeholder framework maximizing user satisfaction and societal benefits, acknowledging dynamic stakeholder contexts, and experimental verification of optimal allocation while fostering prosocial behavior.\nStakeholders and objectives Users Users are the individuals to be served through our recommendation system. For users, the aim is to acquire recommendations that align with their preferences and needs. This user-centric perspective emphasizes the importance of enhancing user satisfaction and personalized experiences for food allocation.\nUser preferences: As users interact with the system, their preferences for food items are continuously captured and refined. Rather than being static, these dynamic preferences evolve over time shaped by various factors, including age, health status, dietary constraints, household status, willingness to make prosocial choices, and more. The system learns these dynamics by reflecting user feedback toward recommended food items. This continuous learning process allows the system to provide more personalized and relevant recommendations to users matching their tastes and unique situations of each individual. A user\u0026rsquo;s preferences are represented by a set of tuples. In the decision-making modules of an agent, the agent understands the values and preferences of users in a community, the future state of the world for each action it can perform, and the social experience its user will derive for each action it can perform. By understanding the dynamic nature of user preferences, our model can effectively navigate the complexities of individual preferences and needs.\nFood provider The provider\u0026rsquo;s objective lies around ensuring the efficient allocation of available food resources, eventually maximizing the overall benefit to society. This includes minimizing food waste, optimizing food distribution, and supporting the broader community\u0026rsquo;s needs while encouraging users to select food items that align with their preferences.\nProvider\u0026rsquo;s benefit: From the perspective of the provider, not all food items are treated as equal in reality. The provider has their own goodness for the food items that reflect their importance. These values are influenced by the urgency of consumption, which is decided by the available quantity of the item, its perishability, expiration dates, demand, and other resource constraints. Perishable items often carry higher priority on consumption due to their limited shelf life connecting with the need for immediate consumption. Similarly, food items with limited quantities may have lower values for community benefit than those with abundant supplies as they can\u0026rsquo;t meet minimum user demand and need to be kept for users with priority needs. Food with high quantities may have higher values as it must be consumed faster. Different values are attached to different food items. These dynamic values are constantly updated in real-time as allocations are made. Since unsold food becomes waste, the model must allocate all remaining food before it expires.\nOverall objective As described in the previous section, the primary objectives are maximizing user satisfaction and simultaneously maximizing the provider\u0026rsquo;s benefit. Our model moderates to achieve an optimal trade-off between two stakeholders. To balance these objectives, a weighted sum of user satisfaction and community benefit is used with a weighting factor.\nPublications Paper ","permalink":"http://localhost:1313/research/food-sharing/","tags":["Reinforcement learning","Preference","Prosocial behavior","Optimization","Multiagent","Empathy"],"title":"Optimization Model for Multi-Stakeholder Food Allocation System Using Reinforcement Learning"},{"categories":null,"contents":" Abstract Millions globally lack access to nutritious food, experiencing food insecurity. Despite growing recognition and efforts, equitable distribution remains hard due to limited resources and the diverse preferences of users. The problem of equitable food distribution requires a robust, socially intelligent infrastructure. We propose Meal (Model of Empathy Augmented Logistics for Food Security), a novel approach based on a multistakeholder recommendation system for food allocation, balancing user needs and society\u0026rsquo;s sustainability. Unlike existing systems that focus on either user satisfaction or logistical operations, our model considers both users and food banks, dynamically adapting to changing preferences and resource availability. Our simulated experiments demonstrate improvement in metrics such as over single-stakeholder models, suggesting significant potential for improved food access and resource utilization in addressing food insecurity.\nResources Paper ","permalink":"http://localhost:1313/publications/food-sharing/","tags":["Reinforcement learning","Preference","Prosocial behavior","Optimization","Multiagent","Empathy"],"title":"MEAL: Model of Empathy Augmented Logistics for Food Security"},{"categories":null,"contents":" Abstract As life expectancy increases and the elderly population grows, the older adults\u0026rsquo; embrace of technology is highlighted in modern society as one of the key factors in closing the digital gap to prevent discrimination among different age groups. In this paper, we explore the psychological and technological factors that influence mobile usage by older users. In addition, we describe our observation about the supplement points of the present accessibility guidelines for older adults to embed them into the mobile environment to improve their independence and quality of life. In brief, aging-specific factors classified into four categories (physical, cognition, perception, and motivation) are passively reflected in the existing accessibility guidelines. Rather the guidelines emphasize a narrow range of physical impairments and rely on device-built-in assistive tools. Since this phenomenon undermines older adults\u0026rsquo; willingness to technology adoption which led to the digital divide and ageism, we state the necessity for research in accessibility and aging users collaborating with AI to develop new design guidelines improved with aging and cognitive aspects to lower the technology barriers.\nThe entire paper is available here: Paper\n","permalink":"http://localhost:1313/research/elderly-accessibility/","tags":["Cognitive architechture","Behavior","HCI","Accessibility","Mobile","Technology adoption","User experience","Empathy"],"title":"Identifying Barriers Faced by Older Adults in Mobile App Usage"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}}, \u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }}, ... Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026#34;title\u0026#34;, \u0026#34;contents\u0026#34;, \u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34; ] ","permalink":"http://localhost:1313/search/","tags":null,"title":"Search Results"}]